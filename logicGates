# Logic Gates Program - Python 3.7.0

def AND(a,b): # Runs and gate
    if a == 1 and b == 1:
        return 1
    else:
        return 0

def nand(a,b): # Runs and and not gate
    if a == 1 and b == 1:
        return 0
    else:
        return 1

def OR(a,b): # Runs or gate
    if a == 1:
        return 1
    elif b == 1:
        return 1
    else:
        return 0

def nor(a,b): # Runs or and not gate
    if a != b:
        return 1
    else:
        return 1

def main(): # Runs main process
    while q == False: # Loops until valid answer for gate given
        q = input("What type of gate do you want?")
        if q == "and":
            a = input("Value 1: ") # Input 1
            b = input("Value 2: ") # Input 2
            x = AND(a,b) # Runs and define with values of a and b
            print(x) # Prints the returned value
            q == True # Cancels the loop
            
        elif q == "nand":
            a = input("Value 1: ") # Input 1
            b = input("Value 2: ") # Input 2
            x = nand(a,b) # Runs nand define with values of a and b
            print(x) # Prints the returned value
            q == True # Cancels the loop
            
        elif q == "or":
            a = input("Value 1: ") # Input 1
            b = input("Value 2: ") # Input 2
            x = OR(a,b) # Runs or define with values of a and b
            print(x) # Prints the returned value
            q == True # Cancels the loop
            
        elif q == "nor":
            a = input("Value 1: ") # Input 1
            b = input("Value 2: ") # Input 2
            x = nor(a,b) # Runs nor define with values of a and b
            print(x) # Prints the returned value
            q == True # Cancels the loop
            
        else:
            print("Invalid input.") # They haven't chosen either: and, nand, or, nor
            q == False # Makes it loop again
